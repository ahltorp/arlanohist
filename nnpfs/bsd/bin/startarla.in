#!/bin/sh
#
# A simple startupscript to start arla for *BSD.
# 
# You must have a path that includes, modload, ld, 
# mount_nnpfs, and arlad.
#
# $Id: startarla.in,v 1.30 2010/07/30 14:24:36 tol Exp $
#


PATH=/sbin:/usr/sbin:/usr/bin:/bin
SBINDIR=%sbindir%
LKMDIR=%lkmdir%
CACHEDIR=%ARLACACHEDIR%
LIBEXECDIR=%libexecdir%
VARDB=/var/db

if [ ! -e $CACHEDIR ] ; then
    mkdir $CACHEDIR
    chmod 700 $CACHEDIR
    chown root $CACHEDIR
fi

if [ ! -e $CACHEDIR/etc ] ; then
    mkdir $CACHEDIR/etc
    chmod 755 $CACHEDIR
    chown root $CACHEDIR/etc
fi

if [ -f /etc/resolv.conf ]; then
    cmp -s /etc/resolv.conf "${CACHEDIR}/etc/resolv.conf" || \
        cp -p /etc/resolv.conf "${CACHEDIR}/etc/resolv.conf"
fi

if test -f  $LKMDIR/nnpfs.ko; then
  kldload $LKMDIR/nnpfs.ko
  kldstat > $VARDB/nnpfs_modstat 2>&1
  if test ! -c /dev/nnpfs0; then
    mknod /dev/nnpfs0 c 128 0
  fi
elif test -x /usr/bin/kextutil; then
  rm -f $VARDB/nnpfs_sym
  kextutil -s $VARDB $LKMDIR/nnpfs.kext
  kextstat > $VARDB/nnpfs_modstat 2>&1
  mkdir "${CACHEDIR}/cores" 2> /dev/null
elif test -x /sbin/sysconfig; then
  /sbin/sysconfig -c nnpfs
  if test ! -c /dev/nnpfs0; then
    SYSCALL=`/sbin/sysconfig -q nnpfs major | awk '{print $3}'`
    mknod /dev/nnpfs0 c ${SYSCALL} 0
  fi
elif test -x /sbin/modload; then
  rm -f $VARDB/nnpfs_sym
  modload -A /dev/ksyms -o $VARDB/nnpfs_sym -e nnpfs_mod \
      -p $SBINDIR/nnpfs_makedev $LKMDIR/nnpfs_mod.o
  modstat > $VARDB/nnpfs_modstat 2>&1
else
  echo "Couldn't figure out how to load your kernel module"
  exit 1
fi
${LIBEXECDIR}/arlad -z /dev/nnpfs0
test -d /afs || mkdir /afs
${SBINDIR}/mount_nnpfs /dev/nnpfs0 /afs
